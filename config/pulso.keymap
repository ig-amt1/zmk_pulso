#include "keys_br_abnt2.h"
#include "helper.h"
#include "accents.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUM  1
#define SYM  2
#define FUN  3
#define gam  4
#define NAV  5
#define FGM  6

AC_KEY(A_acute, BR_A, BR_ACUT)
AC_KEY(A_grave, BR_A, BR_GRAVE)
AC_KEY(A_tilde, BR_A, BR_TILDE)
AC_KEY(A_circ,  BR_A, BR_CIRC)
AC_KEY(E_acute, BR_E, BR_ACUT)
AC_KEY(E_circ,  BR_E, BR_CIRC)
AC_KEY(I_acute, BR_I, BR_ACUT)
AC_KEY(O_acute, BR_O, BR_ACUT)
AC_KEY(O_tilde, BR_O, BR_TILDE)
AC_KEY(O_circ,  BR_O, BR_CIRC)
AC_KEY(U_acute, BR_U, BR_ACUT)

UNDEAD_KEY(tilde, BR_TILDE)
UNDEAD_KEY(caret, BR_CIRC)
UNDEAD_KEY(grave, BR_GRAVE)

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "balanced";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // combo_esc {
        //timeout-ms = <50>;
        //key-positions = <13 16>;
        //  bindings = <&caps_word>;
        //  };

        game {
            timeout-ms = <50>;
            bindings = <&tog 4>;
            key-positions = <34 13 12>;
            layers = <0>;
        };

        close {
            timeout-ms = <50>;
            bindings = <&close>;
            key-positions = <0 1 2 3>;
            layers = <0>;
        };

        prtsc_combo {
            timeout-ms = <50>;
            bindings = <&kp PRINTSCREEN>;
            key-positions = <5 4>;
            layers = <0>;
        };

        caps {
            timeout-ms = <50>;
            bindings = <&caps_word>;
            key-positions = <22 23 24 21>;
            layers = <0>;
        };

        esc {
            timeout-ms = <50>;
            bindings = <&kp ESC>;
            key-positions = <11 12 13>;
            layers = <0>;
        };

        del {
            timeout-ms = <50>;
            bindings = <&kp DEL>;
            key-positions = <8 9>;
            layers = <0>;
        };

        quest {
            bindings = <&kp BR_QMARK>;
            key-positions = <29 28 27>;
            layers = <0>;
        };

        lgui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <10 11>;
            layers = <0>;
        };

        rgui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <19 18>;
            layers = <0>;
        };

        lock {
            bindings = <&lock>;
            key-positions = <6 7 8>;
            layers = <5>;
        };

        copy {
            bindings = <&copy>;
            key-positions = <23 22>;
            layers = <0>;
        };

        paste {
            bindings = <&paste>;
            key-positions = <23 24>;
            layers = <0>;
        };

        n1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <0 10>;
            layers = <0>;
        };

        n2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <1 11>;
            layers = <0>;
        };

        n3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <2 12>;
            layers = <0>;
        };

        n4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <3 13>;
            layers = <0>;
        };

        n5 {
            bindings = <&kp NUMBER_5>;
            key-positions = <4 14>;
            layers = <0>;
        };

        n6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <5 15>;
            layers = <0>;
        };

        n7 {
            bindings = <&kp NUMBER_7>;
            key-positions = <6 16>;
            layers = <0>;
        };

        n8 {
            bindings = <&kp NUMBER_8>;
            key-positions = <7 17>;
            layers = <0>;
        };

        n9 {
            bindings = <&kp NUMBER_9>;
            key-positions = <8 18>;
            layers = <0>;
        };

        n0 {
            bindings = <&kp NUMBER_0>;
            key-positions = <9 19>;
            layers = <0>;
        };
    };

    macros {
        close: close {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_release>,
                <&kp LALT>;
        };

        cao: cao {
            compatible = "zmk,behavior-macro";
            label = "CAO";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp BR_CCED>,
                <&macro_tap_time 20>,
                <&A_tilde>;
        };

        guilt: guilt {
            compatible = "zmk,behavior-macro";
            label = "GUILT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        guirt: guirt {
            compatible = "zmk,behavior-macro";
            label = "GUIRT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        lock: lock {
            compatible = "zmk,behavior-macro";
            label = "LOCK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        gui_up: gui_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp UP_ARROW>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "GUI_UP";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "PASTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
       &kp Q  &kp W       &kp E        &kp R        &kp T        &kp Y        &kp U        &kp I        &kp O       &kp P
       &kp A  &hm LALT S  &hm LSHFT D  &hm LCTRL F  &kp G        &kp H        &hm RCTRL J  &hm RSHFT K  &hm RALT L  &kp BR_SEMI
&none  &kp Z  &kp X       &kp C        &kp V        &kp B        &kp N        &kp M        &kp COMMA    &kp DOT     &kp BR_SLASH  &none
                          &none        &lt 3 TAB    &lt 1 SPACE  &lt 2 ENTER  &lt 5 BSPC   &none
            >;
        };

        number_layer {
            bindings = <
       &kp BR_EXCL    &kp BR_AT     &kp BR_HASH     &kp  BR_DLLR    &kp BR_PRCNT        &kp PLUS      &kp N7        &kp N8        &kp N9   &kp BR_BSLH
       &kp BR_GRAVE    &kp BR_AMPS   &kp BR_ASTRK    &kp BR_LPAR     &kp BR_RPAR         &kp MINUS     &kp N4        &kp N5        &kp N6   &kp COMMA
&none  &kp BR_UNDER   &kp BR_LBRC   &kp BR_RBRC     &kp BR_LT       &kp BR_GT          &kp BR_COLON   &kp N1        &kp N2        &kp N3   &kp BR_EQUAL  &none
                                          &none    &none    &none                       &kp BR_ASTRK  &kp BR_N0     &none
            >;
        };

        symbol_layer {
            bindings = <
       &kp BR_ASTRK     &kp BR_AMPS  &kp BR_LBRC        &kp BR_RBRC      &kp BR_HASH        &kp BR_CIRC  &U_acute  &A_tilde  &O_tilde  &kp BR_CCED
       &kp BR_COLON     &kp BR_AT    &kp BR_LPAR    	&kp BR_RPAR   	 &kp BR_DQT  	    &kp BR_ACUT  &I_acute  &A_acute  &O_acute  &E_acute
&none  &kp BR_EXCL      &kp PERCENT  &kp BR_LBKT   	    &kp BR_RBKT      &kp BR_PIPE        &kp BR_TILDE &E_circ   &A_circ   &O_circ   &A_grave     &none
                                     &none              &none            &cao               &none      &none     &none
            >;
        };

        function_layer {
            bindings = <
       &none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none  &kp F1  &kp F2   &kp F3   &kp F4
       &none       &none         &out OUT_TOG  &none         &none  &none  &kp F5  &kp F6   &kp F7   &kp F8
&none  &bt BT_CLR  &none         &none         &none         &none  &none  &kp F9  &kp F10  &kp F11  &kp F12  &none
                                 &none         &none         &none  &none  &none   &none
            >;
        };

        game_layer {
            bindings = <
       &kp TAB    &kp Q  &kp W  &kp E      &kp R      &kp C_VOL_UP  &kp Y          &kp T  &kp P          &tog 4
       &kp LSHFT  &kp A  &kp S  &kp D      &kp F      &kp C_VOL_DN  &kp M          &kp L  &kp SEMICOLON  &kp C_MUTE
&none  &kp LCTRL  &kp Z  &kp X  &kp C      &kp B      &kp N         &kp O          &kp J  &kp V          &kp LGUI    &none
                         &none  &lt 6 ESC  &kp SPACE  &none         &kp BACKSPACE  &none
            >;
        };

        nav_layer {
            bindings = <
       &kp PG_UP  &kp HOME  &none  &none  &none  &kp C_VOL_UP    &none     &kp UP    &none      &kp CAPS
       &kp PG_DN  &kp END   &none  &none  &none  &kp C_VOL_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL
&none  &none      &none     &none  &none  &none  &kp C_MUTE         &guilt  &gui_up   &guirt  &none     &none
                            &none  &none  &none  &none              &none     &none
            >;
        };

        fgame_layer {
            bindings = <
       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5   &kp C_VOL_UP  &kp Y   &kp N      &kp V       &kp CAPS
       &kp F6        &kp B         &kp M         &kp T         &kp G          &kp C_VOL_DN  &kp J   &kp T      &kp I       &none
&none  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5         &kp N         &kp M   &kp COMMA  &kp PERIOD  &kp RGUI  &none
                                   &none         &none         &none          &none        &kp BACKSPACE   &none
            >;
        };
    };
};
